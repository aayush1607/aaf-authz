#########
##  ============LICENSE_START====================================================
##  org.onap.aaf
##  ===========================================================================
##  Copyright (c) 2017 AT&T Intellectual Property. All rights reserved.
##  ===========================================================================
##  Licensed under the Apache License, Version 2.0 (the "License");
##  you may not use this file except in compliance with the License.
##  You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##  Unless required by applicable law or agreed to in writing, software
##  distributed under the License is distributed on an "AS IS" BASIS,
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##  See the License for the specific language governing permissions and
##  limitations under the License.
##  ============LICENSE_END====================================================
##
###
### AAF-HELLO
###
kind: Service
apiVersion: v1
metadata:
  name: aaf-hello
spec:
  selector:
    app: aaf-hello
  type: NodePort
  ports:
    - name: aaf-hello
      protocol: TCP
      port: {{ .Values.service.port }}
      nodePort: {{ .Values.service.public_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaf-hello
  labels:
    app: aaf-hello
spec:
  replicas: {{ .Values.replicas.hello }}
  selector:
    matchLabels:
      app: aaf-hello
  template:
    metadata:
      labels:
        app: aaf-hello
    spec:
      volumes:
        # Use this Pod Sharing dir to declare various States of starting
        - name: aaf-hello-vol
          persistentVolumeClaim:
            claimName: aaf-hello-pvc
      initContainers:
        - command:
            - /bin/sh
            - -c
            - |
              chmod -R 775 /opt/app/osaaf
              chown -R 1000:1000 /opt/app/osaaf
          image: busybox:1.28
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          name: init-sysctl
          volumeMounts:
            - mountPath: /opt/app/osaaf
              name: aaf-hello-vol
        - name: aaf-hello-config
          image: "{{ .Values.image.repository }}{{ .Values.service.agentImage }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/opt/app/osaaf"
              name: aaf-hello-vol
          command: ["bash","-c","exec /opt/app/aaf_config/bin/agent.sh"]
          env:
            - name: APP_FQI
              value: "{{ .Values.service.fqi }}"
            - name: aaf_locate_url
              value: "https://aaf-locate.{{.Release.Namespace }}:8095"
            - name: aaf_locator_container
              value: "helm"
            - name: aaf_locator_container_ns
              value: "{{ .Release.Namespace }}"
            - name: aaf_locator_fqdn
              value: "{{.Values.service.fqdn}}"
            - name: aaf_locator_public_fqdn
              value: "{{.Values.service.public_fqdn}}"
            - name: cadi_latitude
              value: "{{ .Values.service.cadi_latitude }}"
            - name: cadi_longitude
              value: "{{ .Values.service.cadi_longitude }}"
            - name: "DEPLOY_FQI"
              value: "deployer@people.osaaf.org"
            - name: "DEPLOY_PASSWORD"
              value: "demo123456!"

###
### AAF-HELLO
###
      containers:
      - name: aaf-hello
        image: {{ .Values.image.repository }}{{ .Values.service.image }}
        imagePullPolicy: IfNotPresent
        command: ["bash","-c","cd /opt/app/aaf && if [ ! -d /opt/app/osaaf/etc ]; then cp -Rf etc logs /opt/app/osaaf; fi && exec bin/hello"]
        volumeMounts:
        -  mountPath: "/opt/app/osaaf"
           name: aaf-hello-vol
        ports:
        -  name: aaf-hello
           protocol: TCP
           containerPort: {{ .Values.service.port }}
