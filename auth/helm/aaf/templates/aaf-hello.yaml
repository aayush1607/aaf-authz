###
### AAF-HELLO
###
kind: Service
apiVersion: v1
metadata:
  name: aaf-hello
spec:
  selector:
    app: aaf-hello
  type: NodePort
  ports:
    - name: aaf-hello
      protocol: TCP
      port: 8130
      NodePort: 30086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaf-hello
  labels:
    app: aaf-hello
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aaf-hello
  template:
    metadata:
      labels:
        app: aaf-hello
    spec:
      volumes:
        # Use this Pod Sharing dir to declare various States of starting
      - name: {{ .Chart.Name }}-config-vol
        emptyDir: {}
      initContainers:
        - name: {{ .Chart.Name }}-config-container
          image: {{ .Values.image.repository }}onap/aaf/aaf_config:{{ .Values.image.version }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/opt/app/osaaf"
              name: {{ .Chart.Name }}-config-vol
          env:
            - name: AAF_ENV
              value: "{{ .Values.cadi.aaf_env }}"
            - name: AAF_REGISTER_AS
              value: "aaf-hello"
            - name: AAF_LOCATOR_AS
              value: "aaf-locate"
            - name: LATITUDE
              value: "{{ .Values.cadi.cadi_latitude }}"
            - name: LONGITUDE
              value: "{{ .Values.cadi.cadi_longitude }}"
            - name: CASS_HOST
              value: "aaf-cass"
      containers:
###
### AAF-HELLO
###
      - name: {{ .Chart.Name }}-hello
        image: {{ .Values.image.repository }}onap/aaf/aaf_hello:{{ .Values.image.version }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash","/opt/app/aaf/pod/pod_wait.sh","aaf_hello","sleep","50", "/opt/app/aaf/bin/hello"]
        volumeMounts:
          -  mountPath: "/opt/app/osaaf"
             name: {{ .Chart.Name }}-config-vol
        ports:
        - name: aaf-hello
          protocol: TCP
          containerPort: 8130
