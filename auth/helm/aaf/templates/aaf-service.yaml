###
### AAF-SERVICE
###
kind: Service
apiVersion: v1
metadata:
  name: aaf-service
spec:
  selector:
    app: aaf-service
  type: NodePort
  ports:
    - name: aaf-service
      protocol: TCP
      port: 8100
      NodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaf-service
  labels:
    app: aaf-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aaf-service
  template:
    metadata:
      labels:
        app: aaf-service
    spec:
      volumes:
      - name: {{ .Chart.Name }}-config-vol
        persistentVolumeClaim:
        claimName: {{ .Chart.Name }}-config-pvc
      #- name: {{ .Chart.Name }}-config-vol
      #  emptyDir: {}
      initContainers:
        - name: {{ .Chart.Name }}-config-container
          image: {{ .Values.image.repository }}onap/aaf/aaf_config:{{ .Values.image.version }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/opt/app/osaaf"
              name: {{ .Chart.Name }}-config-vol
          env:
            - name: AAF_ENV
              value: "{{ .Values.cadi.aaf_env }}"
            - name: AAF_REGISTER_AS
              value: "aaf-service"
            - name: AAF_LOCATOR_AS
              value: "{{ .Values.cadi.aaf_locate_as }}"
            - name: LATITUDE
              value: "{{ .Values.cadi.cadi_latitude }}"
            - name: LONGITUDE
              value: "{{ .Values.cadi.cadi_longitude }}"
            - name: CASS_HOST
              value: "aaf-cass"
      containers:
###
### AAF-SERVICE
###
      - name: {{ .Chart.Name }}-service
        image: {{ .Values.image.repository }}onap/aaf/aaf_service:{{ .Values.image.version }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash","/opt/app/aaf/pod/pod_wait.sh","aaf_service","sleep","50", "/opt/app/aaf/bin/service"]
        volumeMounts:
          -  mountPath: "/opt/app/osaaf"
             name: {{ .Chart.Name }}-config-vol
        ports:
        - name: service
          protocol: TCP
          containerPort: 8100
